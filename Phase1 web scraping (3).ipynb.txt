{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c09839cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import regex as re\n",
    "import numpy as np\n",
    "import selenium\n",
    "import pandas as pd\n",
    "from selenium import webdriver\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "from selenium.common.exceptions import StaleElementReferenceException,NoSuchElementException\n",
    "from selenium.webdriver.common.by import By\n",
    "import time\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c406126a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# connecting to the crome\n",
    "driver=webdriver.Chrome(r\"chromedriver.exe\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0f4a595e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# searching the website\n",
    "driver.get(\"https://www.booking.com/index.en-gb.html?aid=397646&label=yho748jc-1DCAEoggI46AdIM1gDaGyIAQGYAQm4ARfIAQzYAQPoAQGIAgGoAgO4Ap3Y96YGwAIB0gIkY2NlMDIyZmItZDdlZi00MWVkLWE5YzUtNmIzNmE1NWI3MDU32AIE4AIB&sid=0cb28093647b47834b4f3a02e11acd13&keep_landing=1&sb_price_type=total&\")\n",
    "time.sleep(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "45df4bef",
   "metadata": {},
   "outputs": [],
   "source": [
    "try:\n",
    "    # Try to close the popup by clicking on the close button using a CSS selector\n",
    "    close_button = driver.find_element(By.CSS_SELECTOR, 'button[aria-label=\"Dismiss sign in information.\"]')\n",
    "    close_button.click()\n",
    "except NoSuchElementException:\n",
    "    # If the close button is not found, you can handle it here or simply pass\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "53b9a7db",
   "metadata": {},
   "outputs": [],
   "source": [
    "# clicking cities\n",
    "button=driver.find_element(By.XPATH,'//li[@class=\"bui-tab__item\"][2]/button/span')\n",
    "button.click()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4500aa44",
   "metadata": {},
   "outputs": [],
   "source": [
    "city=['Dubai','London','Kuala Lumpur','Manchester','New-Delhi','Birmingham','Berlin','Sydney','Melbourne','Paris','Tokyo','Toronto']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a3f94878",
   "metadata": {},
   "outputs": [],
   "source": [
    "city_links = []\n",
    "city_links_elems = driver.find_elements(By.XPATH,'//div[@class=\"wcu-seo-popular-city bui-spacer--large\"]/a')\n",
    "for ci in city_links_elems:\n",
    "     city_links.append(ci.get_attribute(\"href\"))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ff111aba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "60"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(city_links)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7fc42d46",
   "metadata": {},
   "outputs": [],
   "source": [
    "filtered_city_links = []\n",
    "\n",
    "for link_element in city_links_elems:\n",
    "    link = link_element.get_attribute(\"href\")\n",
    "    for c in city:\n",
    "        if c[:4].lower() in link:\n",
    "            filtered_city_links.append(link)\n",
    "            break"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ce700a5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(filtered_city_links)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "af78ade0",
   "metadata": {},
   "outputs": [],
   "source": [
    "product_links = []\n",
    "for link in filtered_city_links[0:1]:\n",
    "    driver.get(link)\n",
    "    time.sleep(1)\n",
    "    \n",
    "    try:\n",
    "        # Try to close the popup by clicking on the close button using a Xpath selector\n",
    "        close_buttons = driver.find_element(By.XPATH, '/html/body/div[2]/div/div[3]/div[1]/div[2]/div/div/form/div[1]/div[2]')\n",
    "        close_buttons.click()\n",
    "    except NoSuchElementException:\n",
    "        # If the close button is not found, you can handle it here or simply pass\n",
    "        pass\n",
    "    \n",
    "    \n",
    "    \n",
    "    driver.find_element(By.XPATH,'/html/body/div[2]/div/div[4]/div[2]/div/div[2]/div[4]/div[11]/a/span').click()\n",
    "    time.sleep(2)\n",
    "    \n",
    "    button=driver.find_element(By.XPATH,'//span[@class=\"fcd9eec8fb a804864eef c2cc050fb8 c696a7d242\"]').click()\n",
    "    \n",
    "    calender = driver.find_elements(By.XPATH,'//span[@class=\"cf06f772fa\"]')\n",
    "    \n",
    "    for da in calender:\n",
    "        date= da.get_attribute(\"aria-label\")\n",
    "        if date == '2 October 2023':\n",
    "            da.click()\n",
    "        elif date == '3 October 2023':\n",
    "            da.click()\n",
    "            break\n",
    "    \n",
    "    cli=driver.find_element(By.XPATH,'//button[@class=\"a83ed08757 c21c56c305 a4c1805887 f671049264 d2529514af c082d89982 aa11d0d5cd\"]').click()\n",
    "    \n",
    "    driver.find_element(By.XPATH,'//div[text()=\"Hotels\"]').click()\n",
    "    time.sleep(4)\n",
    "    \n",
    "    for page in range(1, 41):\n",
    "\n",
    "        product_links_elems = driver.find_elements(By.XPATH,'//a[@class=\"e13098a59f\"]')\n",
    "                                                  \n",
    "        for elem in product_links_elems:\n",
    "            product_links.append(elem.get_attribute(\"href\"))\n",
    "            \n",
    "        next_button = driver.find_element(By.CSS_SELECTOR, 'button[aria-label=\"Next page\"]')\n",
    "        \n",
    "        disabled_attribute = next_button.get_attribute(\"disabled\")\n",
    "        \n",
    "        if disabled_attribute == 'true':\n",
    "            break\n",
    "        else:\n",
    "            next_button.click()\n",
    "            time.sleep(2)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f7c6b7e",
   "metadata": {},
   "source": [
    "3) sno ,  Hotel name, Room Type ,Single Bed ,Double bed  ,Prices\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba650e9c",
   "metadata": {},
   "source": [
    "2) sno, Hotel name ,Free wifi, Family rooms ,Non Smoking Rooms, Restaurant ,Bar, Heating ,Lift ,\n",
    "Breakfast Cuisine1,Breakfast Cuisine2, Breakfast Cuisine3\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17ac28f6",
   "metadata": {},
   "source": [
    "1) sno, Hotel name ,cities, location, number of reviews, user ratings, star rating, review score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "2efab537",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a list to hold the scraped data\n",
    "scrap_data1=[]\n",
    "scrap_data2=[]\n",
    "scrap_data3=[]\n",
    "z=1\n",
    "i=1\n",
    "for link in product_links[0:2]:\n",
    "    driver.get(link)\n",
    "    \n",
    "    #time.sleep(10)\n",
    "    sno=i\n",
    "    \n",
    "    \n",
    "    try:\n",
    "        Hotel_name = driver.find_element(By.XPATH,'//h2[@class=\"d2fee87262 pp-header__title\"]').text.strip()\n",
    "    except:\n",
    "        Hotel_name = '-'\n",
    "    try:\n",
    "        x = driver.find_element(By.XPATH,'//input[@class=\"eb46370fe1\"]')\n",
    "        cities = x.get_attribute(\"value\")\n",
    "    except:\n",
    "        cities = '-'\n",
    "    try:    \n",
    "        location = driver.find_element(By.XPATH,'//p[@class=\"address address_clean\"]').text.strip()\n",
    "    except:\n",
    "        location = '-'\n",
    "    try:\n",
    "        no_of = driver.find_element(By.XPATH,'//span[@class=\"a3b8729ab1 f45d8e4c32 d935416c47\"]').text.strip().split(' ')[1]\n",
    "\n",
    "        no_of_review = int(no_of.replace(',', ''))\n",
    "    except:\n",
    "        no_of_review = 0\n",
    "    try:\n",
    "        user_rating = float(driver.find_element(By.XPATH,'//span[@class=\"review-score-badge\"]').text.strip())\n",
    "    except:\n",
    "        user_rating = 0\n",
    "    try:\n",
    "        star_rating = driver.find_elements(By.XPATH, '//span[@data-testid=\"rating-stars\"]/span')\n",
    "        len(star_rating)\n",
    "    except:\n",
    "        star_rating= 0\n",
    "    try:\n",
    "        review_score = float(driver.find_element(By.XPATH,'//div[@class=\"a3b8729ab1 d86cee9b25\"]').text)\n",
    "    except:\n",
    "        review_score = 0\n",
    "    \n",
    "\n",
    "      \n",
    "#     Free wifi, Family rooms ,Non Smoking Rooms, Restaurant ,Bar, Heating ,Lift ,Breakfast Cuisine1,Breakfast Cuisine2, Breakfast Cuisine3\n",
    "    \n",
    "    \n",
    "    ac=driver.find_elements(By.XPATH,'//span[@class=\"db312485ba\"]')\n",
    "    \n",
    "    AC=[]\n",
    "    for a in range(0,len(ac)):\n",
    "        AC.append(ac[a].text)\n",
    "    \n",
    "    if 'Free WiFi' in AC:\n",
    "        Free_wifi='Yes'\n",
    "    else:\n",
    "        Free_wifi='No'\n",
    "\n",
    "    if 'Family rooms' in AC:\n",
    "        Family_rooms='Yes'\n",
    "    else:\n",
    "        Family_rooms='No'\n",
    "\n",
    "    if 'Non-smoking rooms' in AC:\n",
    "        Non_Smoking_Rooms='Yes'\n",
    "    else:\n",
    "        Non_Smoking_Rooms='No'\n",
    "\n",
    "    if 'Restaurant' in AC:\n",
    "        Restaurant='Yes'\n",
    "    else:\n",
    "        Restaurant='No'\n",
    "    \n",
    "    if 'Bar' in AC:\n",
    "        Bar='Yes'\n",
    "    else:\n",
    "        Bar='No'\n",
    "    \n",
    "    if 'Heating' in AC:\n",
    "        Heating='Yes'\n",
    "    else:\n",
    "        Heating='No'\n",
    "    \n",
    "    if 'Lift' in AC:\n",
    "        Lift='Yes'\n",
    "    else:\n",
    "        Lift='No'\n",
    "    \n",
    "   \n",
    "    try:\n",
    "        driver.find_element(By.XPATH,'//div[text()=\"Cuisine\"]')\n",
    "        \n",
    "        cusine=driver.find_element(By.XPATH, '//li[1][@class=\"b0932df2e7 e375bc2404\"]/div/ul/li/div/div[2]').text.split(' ')\n",
    "        \n",
    "        if len(cusine) == 1:\n",
    "            Breakfast_Cuisine1 = cusine[0]\n",
    "            Breakfast_Cuisine2 = 'No'\n",
    "            Breakfast_Cuisine3 = 'No'\n",
    "        elif len(cusine) == 3:\n",
    "            Breakfast_Cuisine1 = cusine[0]\n",
    "            Breakfast_Cuisine2 = cusine[2]\n",
    "            Breakfast_Cuisine3 = 'No' \n",
    "        elif len(cusine) > 4:\n",
    "            Breakfast_Cuisine1 = cusine[0]\n",
    "            Breakfast_Cuisine2 = cusine[2]\n",
    "            Breakfast_Cuisine3 = cusine[4]\n",
    "        else:\n",
    "            Breakfast_Cuisine1 = 'No'\n",
    "            Breakfast_Cuisine2 = 'No'\n",
    "            Breakfast_Cuisine3 = 'No'\n",
    "    except:\n",
    "        Breakfast_Cuisine1 = 'No'\n",
    "        Breakfast_Cuisine2 = 'No'\n",
    "        Breakfast_Cuisine3 = 'No'\n",
    "        \n",
    "        \n",
    "        \n",
    "    \n",
    "    room_type_elements = driver.find_elements(By.XPATH, '//span[@class=\"hprt-roomtype-icon-link \"]')\n",
    "    \n",
    "    h=0\n",
    "    \n",
    "    for j, room_type_element in enumerate(room_type_elements, 1):\n",
    "        Sno = z\n",
    "        room_type = room_type_element.text.strip()\n",
    "\n",
    "        try:\n",
    "            hotel_name = driver.find_element(By.XPATH, '//h2[@class=\"d2fee87262 pp-header__title\"]').text.strip()\n",
    "        except:\n",
    "            hotel_name = '-'\n",
    "        \n",
    "        single_b=[]\n",
    "        double_b=[]\n",
    "        pr=[]\n",
    "        b=driver.find_elements(By.XPATH,'//table[@class=\"hprt-table  hprt-table-long-language \"]/tbody/tr')\n",
    "        for k in b:\n",
    "\n",
    "            c=k.find_elements(By.XPATH,'./td')\n",
    "            bed=[]\n",
    "            if len(c)==5:\n",
    "                \n",
    "                bed_type=k.find_elements(By.XPATH,'./td/div/div[3]/div/ul/li/span')\n",
    "                #print(bed_type)\n",
    "                for g in bed_type:\n",
    "                    bed.append(g.text)\n",
    "                    \n",
    "                if len(bed_type)==1 or len(bed_type) == len(bed):\n",
    "                    try:\n",
    "                        if '1 single bed' in bed or '2 single beds'in bed or '3 single beds' in bed:\n",
    "\n",
    "                            single_b.append('Yes')\n",
    "                        else:\n",
    "\n",
    "                            single_b.append('No')\n",
    "                    except:\n",
    "                        single_b.append('No')\n",
    "\n",
    "                    try:\n",
    "                        if '1 double bed' in bed or '1 extra-large double bed' in bed or '1 large double bed' in bed or '2 double beds' in bed or '2 large double beds' in bed:\n",
    "                            double_b.append('Yes')\n",
    "                        else:\n",
    "                            double_b.append('No')\n",
    "\n",
    "                    except:\n",
    "                        double_b.append('No')\n",
    "                else:\n",
    "                    pass\n",
    "\n",
    "                try:\n",
    "                    d=k.find_element(By.XPATH,'./td[3]/div/div/div[1]/div[2]/div/span').text.strip().split(' ')[1]\n",
    "                    di=int(d.replace(',', ''))\n",
    "                    pr.append(di) \n",
    "                except:\n",
    "                    pr.append(0)\n",
    "            else:\n",
    "                pass\n",
    "            \n",
    "\n",
    "        try:\n",
    "            scrap_data3.append([Sno, hotel_name, pr[h], room_type, single_b[h], double_b[h]])\n",
    "        except:\n",
    "            scrap_data3.append([Sno, hotel_name, 0, room_type, 'No', 'No'])\n",
    "\n",
    "        z += 1\n",
    "        h += 1\n",
    "\n",
    "        \n",
    "    sno= i\n",
    "    scrap_data1.append([ sno, Hotel_name ,cities, location, no_of_review, user_rating, len(star_rating), review_score])    \n",
    "    scrap_data2.append([ sno, Hotel_name, Free_wifi, Family_rooms, Non_Smoking_Rooms, Restaurant, Bar, Heating, Lift,Breakfast_Cuisine1,Breakfast_Cuisine2,Breakfast_Cuisine3 ])\n",
    "    \n",
    "    \n",
    "    \n",
    "    \n",
    "    if i%10 == 0 or i == len(product_links):\n",
    "    \n",
    "        # Create a pandas dataframe with the scraped data and save it to a CSV file\n",
    "        df1 = pd.DataFrame(scrap_data1, columns=['sno', 'Hotel name' ,'cities', 'location', 'number of reviews', 'user ratings', 'star rating', 'review score'])\n",
    "        df1.to_csv(\"Data1.csv\", index=False)\n",
    "        #df1.to_csv(\"Data1.csv\", index=False, mode='a', header=not os.path.exists(\"Data1.csv\"))\n",
    "\n",
    "        \n",
    "        df2 = pd.DataFrame(scrap_data2, columns=['sno', 'Hotel name', 'Free_wifi', 'Family_Rooms', 'Non_Smoking_Rooms', 'Restaurant', 'Bar', 'Heating', 'Lift','Breakfast_Cuisine1','Breakfast_Cuisine2','Breakfast_Cuisine3' ])\n",
    "        df2.to_csv(\"Data2.csv\", index=False)\n",
    "        #df2.to_csv(\"Data2.csv\", index=False, mode='a', header=not os.path.exists(\"Data2.csv\"))\n",
    "\n",
    "\n",
    "    \n",
    "        df3 = pd.DataFrame(scrap_data3, columns=['sno','Sno', 'Hotel name', 'price', 'Room_type', 'Single_bed', 'Double_bed'])\n",
    "        df3.to_csv(\"Data3.csv\", index=False)\n",
    "        #df3.to_csv(\"Data3.csv\", index=False, mode='a', header=not os.path.exists(\"Data3.csv\"))\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "571e7147",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>cities</th>\n",
       "      <th>location</th>\n",
       "      <th>number of reviews</th>\n",
       "      <th>user ratings</th>\n",
       "      <th>star rating</th>\n",
       "      <th>review score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Residence Inn by Marriott Manchester Piccadilly</td>\n",
       "      <td>Manchester</td>\n",
       "      <td>40 Laystall Street, Manchester, M1 2JZ, United...</td>\n",
       "      <td>349</td>\n",
       "      <td>9.1</td>\n",
       "      <td>4</td>\n",
       "      <td>8.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>ibis Budget Manchester Centre Pollard Street</td>\n",
       "      <td>Manchester</td>\n",
       "      <td>2 Pollard Street, Manchester, M4 7DB, United K...</td>\n",
       "      <td>7306</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2</td>\n",
       "      <td>7.1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Sachas Hotel Manchester</td>\n",
       "      <td>Manchester</td>\n",
       "      <td>Tib Street, Piccadilly, Manchester, M4 1SH, Un...</td>\n",
       "      <td>12353</td>\n",
       "      <td>8.3</td>\n",
       "      <td>3</td>\n",
       "      <td>5.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Motel One Manchester-Piccadilly</td>\n",
       "      <td>Manchester</td>\n",
       "      <td>34 London Road, Piccadilly, Manchester, M1 2PF...</td>\n",
       "      <td>12360</td>\n",
       "      <td>9.5</td>\n",
       "      <td>3</td>\n",
       "      <td>8.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>The Ultimate Hen Suite with Bar &amp; Makeup Room</td>\n",
       "      <td>Manchester</td>\n",
       "      <td>46 Oldham Road, Manchester, M4 5EE, United Kin...</td>\n",
       "      <td>4</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>9.5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sno                                       Hotel name      cities  \\\n",
       "0    1  Residence Inn by Marriott Manchester Piccadilly  Manchester   \n",
       "1    2     ibis Budget Manchester Centre Pollard Street  Manchester   \n",
       "2    3                          Sachas Hotel Manchester  Manchester   \n",
       "3    4                  Motel One Manchester-Piccadilly  Manchester   \n",
       "4    5    The Ultimate Hen Suite with Bar & Makeup Room  Manchester   \n",
       "\n",
       "                                            location  number of reviews  \\\n",
       "0  40 Laystall Street, Manchester, M1 2JZ, United...                349   \n",
       "1  2 Pollard Street, Manchester, M4 7DB, United K...               7306   \n",
       "2  Tib Street, Piccadilly, Manchester, M4 1SH, Un...              12353   \n",
       "3  34 London Road, Piccadilly, Manchester, M1 2PF...              12360   \n",
       "4  46 Oldham Road, Manchester, M4 5EE, United Kin...                  4   \n",
       "\n",
       "   user ratings  star rating  review score  \n",
       "0           9.1            4           8.5  \n",
       "1           8.3            2           7.1  \n",
       "2           8.3            3           5.7  \n",
       "3           9.5            3           8.7  \n",
       "4           9.2            0           9.5  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "6c6fc933",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>Free_wifi</th>\n",
       "      <th>Family_Rooms</th>\n",
       "      <th>Non_Smoking_Rooms</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Bar</th>\n",
       "      <th>Heating</th>\n",
       "      <th>Lift</th>\n",
       "      <th>Breakfast_Cuisine1</th>\n",
       "      <th>Breakfast_Cuisine2</th>\n",
       "      <th>Breakfast_Cuisine3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Residence Inn by Marriott Manchester Piccadilly</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>ibis Budget Manchester Centre Pollard Street</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Sachas Hotel Manchester</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Motel One Manchester-Piccadilly</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>The Ultimate Hen Suite with Bar &amp; Makeup Room</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sno                                       Hotel name Free_wifi  \\\n",
       "0    1  Residence Inn by Marriott Manchester Piccadilly       Yes   \n",
       "1    2     ibis Budget Manchester Centre Pollard Street       Yes   \n",
       "2    3                          Sachas Hotel Manchester        No   \n",
       "3    4                  Motel One Manchester-Piccadilly       Yes   \n",
       "4    5    The Ultimate Hen Suite with Bar & Makeup Room       Yes   \n",
       "\n",
       "  Family_Rooms Non_Smoking_Rooms Restaurant  Bar Heating Lift  \\\n",
       "0          Yes               Yes         No   No     Yes  Yes   \n",
       "1          Yes               Yes         No   No     Yes  Yes   \n",
       "2          Yes               Yes         No  Yes     Yes  Yes   \n",
       "3           No               Yes         No  Yes     Yes  Yes   \n",
       "4           No               Yes         No   No     Yes   No   \n",
       "\n",
       "  Breakfast_Cuisine1 Breakfast_Cuisine2 Breakfast_Cuisine3  \n",
       "0                 No                 No                 No  \n",
       "1                 No                 No                 No  \n",
       "2                 No                 No                 No  \n",
       "3                 No                 No                 No  \n",
       "4                 No                 No                 No  "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "4fc20535",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>price</th>\n",
       "      <th>Room_type</th>\n",
       "      <th>Single_bed</th>\n",
       "      <th>Double_bed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Residence Inn by Marriott Manchester Piccadilly</td>\n",
       "      <td>20284</td>\n",
       "      <td>Room</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Residence Inn by Marriott Manchester Piccadilly</td>\n",
       "      <td>20690</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Residence Inn by Marriott Manchester Piccadilly</td>\n",
       "      <td>21096</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Residence Inn by Marriott Manchester Piccadilly</td>\n",
       "      <td>21096</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Residence Inn by Marriott Manchester Piccadilly</td>\n",
       "      <td>21603</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sno                                       Hotel name  price Room_type  \\\n",
       "0    1  Residence Inn by Marriott Manchester Piccadilly  20284      Room   \n",
       "1    2  Residence Inn by Marriott Manchester Piccadilly  20690    Studio   \n",
       "2    3  Residence Inn by Marriott Manchester Piccadilly  21096    Studio   \n",
       "3    4  Residence Inn by Marriott Manchester Piccadilly  21096    Studio   \n",
       "4    5  Residence Inn by Marriott Manchester Piccadilly  21603    Studio   \n",
       "\n",
       "  Single_bed Double_bed  \n",
       "0         No        Yes  \n",
       "1         No        Yes  \n",
       "2         No        Yes  \n",
       "3         No        Yes  \n",
       "4         No        Yes  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "44f84349",
   "metadata": {},
   "outputs": [],
   "source": [
    "driver.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "33766577",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use regex to replace values containing \"Room\" with \"Room\"\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Room.*', 'Room', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*room.*', 'Room', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Studio.*', 'Studio', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*studio.*', 'Studio', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Suite.*', 'Suite', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*suite.*', 'Suite', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Apartment.*', 'Apartment', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*apartment.*', 'Apartment', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Penthouse.*', 'Penthouse', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Club.*', 'Club', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Deluxe.*', 'Deluxe', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*King.*', 'King', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Queens.*', 'Queen', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Superior.*', 'Superior', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*superior.*', 'Superior', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Standard.*', 'Standard', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Premium.*', 'Premium', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Premier.*', 'Premier', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Classic.*', 'Classic', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Queen.*', 'Queen', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Twin.*', 'Twin', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Glam.*', 'Glam', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Louis.*', 'Louis', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Artisan.*', 'Artisan', regex=True)\n",
    "df3['Room_type'] = df3['Room_type'].str.replace(r'.*Double.*', 'Double', regex=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8f82c26b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Calculate value counts\n",
    "value_counts = df3['Room_type'].value_counts()\n",
    "\n",
    "# Replace values occurring less than 10 times with 'other'\n",
    "threshold = 10\n",
    "df3['Room_type'] = df3['Room_type'].apply(lambda x: 'other' if value_counts[x] < threshold else x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "0f11c433",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Paris           999\n",
       "Tokyo           999\n",
       "New Delhi       997\n",
       "London          923\n",
       "Dubai           598\n",
       "Kuala Lumpur    592\n",
       "Berlin          450\n",
       "Sydney          314\n",
       "Melbourne       267\n",
       "Manchester       87\n",
       "Toronto          87\n",
       "Birmingham       72\n",
       "Name: cities, dtype: int64"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['cities'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "c0619555",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6385, 8)"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "48b790c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6385, 12)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "4010ac1a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24328, 6)"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "daa9f348",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6417, 8)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "08b9ba33",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2.to_csv(\"Data2.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "99bea0fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1.to_csv(\"Data1.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "ca5ad937",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3.to_csv(\"Data3.csv\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "031a21fb",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'builtin_function_or_method' object is not subscriptable",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [57]\u001b[0m, in \u001b[0;36m<cell line: 2>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m Sno\u001b[38;5;241m=\u001b[39m[]\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;241m1\u001b[39m,\u001b[38;5;241m6386\u001b[39m):\n\u001b[1;32m----> 3\u001b[0m     \u001b[43mSno\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mappend\u001b[49m\u001b[43m[\u001b[49m\u001b[43mi\u001b[49m\u001b[43m]\u001b[49m\n",
      "\u001b[1;31mTypeError\u001b[0m: 'builtin_function_or_method' object is not subscriptable"
     ]
    }
   ],
   "source": [
    "Sno=[]\n",
    "for i in range(1,6386):\n",
    "    Sno.append[i]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "9c44a307",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['sno']=Sno"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "4f2cc117",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>cities</th>\n",
       "      <th>location</th>\n",
       "      <th>number of reviews</th>\n",
       "      <th>user ratings</th>\n",
       "      <th>star rating</th>\n",
       "      <th>review score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6412</th>\n",
       "      <td>6406</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...</td>\n",
       "      <td>6</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6413</th>\n",
       "      <td>6407</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6414</th>\n",
       "      <td>6408</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>104-0041 Tokyo-to, Shintomi 1-3-3 HIZ HOTEL, J...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6415</th>\n",
       "      <td>6409</td>\n",
       "      <td>Sakura Sky Hotel - Vacation STAY 18449v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>130-0022 Tokyo-to, Kotobashi 4-9-3 Sakura Sky ...</td>\n",
       "      <td>1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6416</th>\n",
       "      <td>6410</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>110-0015 Tokyo-to, Higashiueno 2-19-3 Hotel Su...</td>\n",
       "      <td>6</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sno                                   Hotel name cities  \\\n",
       "6412  6406             Tokyo Inn - Vacation STAY 11125v  Tokyo   \n",
       "6413  6407             Tokyo Inn - Vacation STAY 11102v  Tokyo   \n",
       "6414  6408             HIZ HOTEL - Vacation STAY 18549v  Tokyo   \n",
       "6415  6409      Sakura Sky Hotel - Vacation STAY 18449v  Tokyo   \n",
       "6416  6410  Hotel Suntargas Ueno - Vacation STAY 08478v  Tokyo   \n",
       "\n",
       "                                               location  number of reviews  \\\n",
       "6412  143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...                  6   \n",
       "6413  143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...                  0   \n",
       "6414  104-0041 Tokyo-to, Shintomi 1-3-3 HIZ HOTEL, J...                  0   \n",
       "6415  130-0022 Tokyo-to, Kotobashi 4-9-3 Sakura Sky ...                  1   \n",
       "6416  110-0015 Tokyo-to, Higashiueno 2-19-3 Hotel Su...                  6   \n",
       "\n",
       "      user ratings  star rating  review score  \n",
       "6412           9.2            0           8.0  \n",
       "6413           0.0            0           0.0  \n",
       "6414           0.0            0           0.0  \n",
       "6415          10.0            0           6.0  \n",
       "6416           9.2            0           8.2  "
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "e4658831",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1 = df1.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "fda20da0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>cities</th>\n",
       "      <th>location</th>\n",
       "      <th>number of reviews</th>\n",
       "      <th>user ratings</th>\n",
       "      <th>star rating</th>\n",
       "      <th>review score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6405</th>\n",
       "      <td>6406</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...</td>\n",
       "      <td>6</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6406</th>\n",
       "      <td>6407</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6407</th>\n",
       "      <td>6408</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>104-0041 Tokyo-to, Shintomi 1-3-3 HIZ HOTEL, J...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6408</th>\n",
       "      <td>6409</td>\n",
       "      <td>Sakura Sky Hotel - Vacation STAY 18449v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>130-0022 Tokyo-to, Kotobashi 4-9-3 Sakura Sky ...</td>\n",
       "      <td>1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6409</th>\n",
       "      <td>6410</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>110-0015 Tokyo-to, Higashiueno 2-19-3 Hotel Su...</td>\n",
       "      <td>6</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sno                                   Hotel name cities  \\\n",
       "6405  6406             Tokyo Inn - Vacation STAY 11125v  Tokyo   \n",
       "6406  6407             Tokyo Inn - Vacation STAY 11102v  Tokyo   \n",
       "6407  6408             HIZ HOTEL - Vacation STAY 18549v  Tokyo   \n",
       "6408  6409      Sakura Sky Hotel - Vacation STAY 18449v  Tokyo   \n",
       "6409  6410  Hotel Suntargas Ueno - Vacation STAY 08478v  Tokyo   \n",
       "\n",
       "                                               location  number of reviews  \\\n",
       "6405  143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...                  6   \n",
       "6406  143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...                  0   \n",
       "6407  104-0041 Tokyo-to, Shintomi 1-3-3 HIZ HOTEL, J...                  0   \n",
       "6408  130-0022 Tokyo-to, Kotobashi 4-9-3 Sakura Sky ...                  1   \n",
       "6409  110-0015 Tokyo-to, Higashiueno 2-19-3 Hotel Su...                  6   \n",
       "\n",
       "      user ratings  star rating  review score  \n",
       "6405           9.2            0           8.0  \n",
       "6406           0.0            0           0.0  \n",
       "6407           0.0            0           0.0  \n",
       "6408          10.0            0           6.0  \n",
       "6409           9.2            0           8.2  "
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "5ebd7518",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2 = df2.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "a2d09af8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>Free_wifi</th>\n",
       "      <th>Family_Rooms</th>\n",
       "      <th>Non_Smoking_Rooms</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Bar</th>\n",
       "      <th>Heating</th>\n",
       "      <th>Lift</th>\n",
       "      <th>Breakfast_Cuisine1</th>\n",
       "      <th>Breakfast_Cuisine2</th>\n",
       "      <th>Breakfast_Cuisine3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6405</th>\n",
       "      <td>6406</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6406</th>\n",
       "      <td>6407</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6407</th>\n",
       "      <td>6408</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6408</th>\n",
       "      <td>6409</td>\n",
       "      <td>Sakura Sky Hotel - Vacation STAY 18449v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6409</th>\n",
       "      <td>6410</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sno                                   Hotel name Free_wifi  \\\n",
       "6405  6406             Tokyo Inn - Vacation STAY 11125v       Yes   \n",
       "6406  6407             Tokyo Inn - Vacation STAY 11102v       Yes   \n",
       "6407  6408             HIZ HOTEL - Vacation STAY 18549v       Yes   \n",
       "6408  6409      Sakura Sky Hotel - Vacation STAY 18449v       Yes   \n",
       "6409  6410  Hotel Suntargas Ueno - Vacation STAY 08478v       Yes   \n",
       "\n",
       "     Family_Rooms Non_Smoking_Rooms Restaurant Bar Heating Lift  \\\n",
       "6405           No                No         No  No     Yes  Yes   \n",
       "6406           No                No         No  No     Yes  Yes   \n",
       "6407           No               Yes         No  No     Yes  Yes   \n",
       "6408           No               Yes         No  No     Yes  Yes   \n",
       "6409           No               Yes         No  No     Yes  Yes   \n",
       "\n",
       "     Breakfast_Cuisine1 Breakfast_Cuisine2 Breakfast_Cuisine3  \n",
       "6405                 No                 No                 No  \n",
       "6406                 No                 No                 No  \n",
       "6407                 No                 No                 No  \n",
       "6408                 No                 No                 No  \n",
       "6409                 No                 No                 No  "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "2d937874",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24328, 6)"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "7ea67f34",
   "metadata": {},
   "outputs": [],
   "source": [
    "Sno=[]\n",
    "for i in range(1,24329):\n",
    "    Sno.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "6a79120d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3.sno=Sno"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "a9ce9a99",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3 = df3.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "522aad36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>price</th>\n",
       "      <th>Room_type</th>\n",
       "      <th>Single_bed</th>\n",
       "      <th>Double_bed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24323</th>\n",
       "      <td>24324</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11128v</td>\n",
       "      <td>8875</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24324</th>\n",
       "      <td>24325</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>7590</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24325</th>\n",
       "      <td>24326</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>7782</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24326</th>\n",
       "      <td>24327</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>27012</td>\n",
       "      <td>Studio</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24327</th>\n",
       "      <td>24328</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>7074</td>\n",
       "      <td>Studio</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sno                                   Hotel name  price Room_type  \\\n",
       "24323  24324             Tokyo Inn - Vacation STAY 11128v   8875    Studio   \n",
       "24324  24325             Tokyo Inn - Vacation STAY 11125v   7590    Studio   \n",
       "24325  24326             Tokyo Inn - Vacation STAY 11102v   7782    Studio   \n",
       "24326  24327             HIZ HOTEL - Vacation STAY 18549v  27012    Studio   \n",
       "24327  24328  Hotel Suntargas Ueno - Vacation STAY 08478v   7074    Studio   \n",
       "\n",
       "      Single_bed Double_bed  \n",
       "24323         No        Yes  \n",
       "24324         No        Yes  \n",
       "24325         No        Yes  \n",
       "24326        Yes         No  \n",
       "24327        Yes         No  "
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "b68b921c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Empty DataFrame\n",
      "Columns: [sno, Hotel name, cities, location, number of reviews, user ratings, star rating, review score]\n",
      "Index: []\n",
      "(0, 8)\n"
     ]
    }
   ],
   "source": [
    "# Assuming you have two DataFrames: df1 and df2\n",
    "\n",
    "# Create a boolean mask to check if the combination of \"sno\" and \"Hotel name\" in df1 exists in df2\n",
    "mask = (df1.set_index(['sno', 'Hotel name'])\n",
    "            .index\n",
    "            .isin(df2.set_index(['sno', 'Hotel name'])\n",
    "                      .index))\n",
    "\n",
    "# Filter rows in df1 where the combination exists in df2\n",
    "matching_rows_df1 = df1[~mask]\n",
    "\n",
    "# Print the matching rows in df1\n",
    "print(matching_rows_df1)\n",
    "print(matching_rows_df1.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "7eeae133",
   "metadata": {},
   "outputs": [],
   "source": [
    "ind=[137,1516,1923,2771,2814,3878,3893,4718,4726,4748,4755,4782,4853,4899,4967,4989,5013,5050,5068,5098,5117,5223,5232,5270,5308]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "a64b0c9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(ind)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "5d3ce423",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'ind' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [40]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m dfx\u001b[38;5;241m=\u001b[39mdf1\u001b[38;5;241m.\u001b[39miloc[\u001b[43mind\u001b[49m]\n",
      "\u001b[1;31mNameError\u001b[0m: name 'ind' is not defined"
     ]
    }
   ],
   "source": [
    "dfx=df1.iloc[ind]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "3d236374",
   "metadata": {},
   "outputs": [],
   "source": [
    "dfx=dfx['Hotel name']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "bf1265a9",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'dfx' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [41]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdfx\u001b[49m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'dfx' is not defined"
     ]
    }
   ],
   "source": [
    "dfx"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "73962be0",
   "metadata": {},
   "outputs": [],
   "source": [
    "  # Replace with the index numbers you want to drop\n",
    "\n",
    "# Drop rows by index numbers\n",
    "df1 = df1.drop(ind)\n",
    "df2= df2.drop(ind)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "2fa1b02c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6385, 12)"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a97a0e9b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24328, 6)"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "dc950b38",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Extract a list of hotel names from df1\n",
    "hotel_names_in_df1 = df1['Hotel name'].tolist()\n",
    "\n",
    "# Use boolean indexing to filter df3 based on hotel names in df1\n",
    "filtered_df3 = df3[df3['Hotel name'].isin(hotel_names_in_df1)]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "12b78a62",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3=filtered_df3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "5dd882a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24177, 6)"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "6c4401fa",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>Free_wifi</th>\n",
       "      <th>Family_Rooms</th>\n",
       "      <th>Non_Smoking_Rooms</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Bar</th>\n",
       "      <th>Heating</th>\n",
       "      <th>Lift</th>\n",
       "      <th>Breakfast_Cuisine1</th>\n",
       "      <th>Breakfast_Cuisine2</th>\n",
       "      <th>Breakfast_Cuisine3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6380</th>\n",
       "      <td>6406</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6381</th>\n",
       "      <td>6407</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6382</th>\n",
       "      <td>6408</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6383</th>\n",
       "      <td>6409</td>\n",
       "      <td>Sakura Sky Hotel - Vacation STAY 18449v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6384</th>\n",
       "      <td>6410</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sno                                   Hotel name Free_wifi  \\\n",
       "6380  6406             Tokyo Inn - Vacation STAY 11125v       Yes   \n",
       "6381  6407             Tokyo Inn - Vacation STAY 11102v       Yes   \n",
       "6382  6408             HIZ HOTEL - Vacation STAY 18549v       Yes   \n",
       "6383  6409      Sakura Sky Hotel - Vacation STAY 18449v       Yes   \n",
       "6384  6410  Hotel Suntargas Ueno - Vacation STAY 08478v       Yes   \n",
       "\n",
       "     Family_Rooms Non_Smoking_Rooms Restaurant Bar Heating Lift  \\\n",
       "6380           No                No         No  No     Yes  Yes   \n",
       "6381           No                No         No  No     Yes  Yes   \n",
       "6382           No               Yes         No  No     Yes  Yes   \n",
       "6383           No               Yes         No  No     Yes  Yes   \n",
       "6384           No               Yes         No  No     Yes  Yes   \n",
       "\n",
       "     Breakfast_Cuisine1 Breakfast_Cuisine2 Breakfast_Cuisine3  \n",
       "6380                 No                 No                 No  \n",
       "6381                 No                 No                 No  \n",
       "6382                 No                 No                 No  \n",
       "6383                 No                 No                 No  \n",
       "6384                 No                 No                 No  "
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "41e49f26",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>Free_wifi</th>\n",
       "      <th>Family_Rooms</th>\n",
       "      <th>Non_Smoking_Rooms</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Bar</th>\n",
       "      <th>Heating</th>\n",
       "      <th>Lift</th>\n",
       "      <th>Breakfast_Cuisine1</th>\n",
       "      <th>Breakfast_Cuisine2</th>\n",
       "      <th>Breakfast_Cuisine3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6380</th>\n",
       "      <td>6406</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6381</th>\n",
       "      <td>6407</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6382</th>\n",
       "      <td>6408</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6383</th>\n",
       "      <td>6409</td>\n",
       "      <td>Sakura Sky Hotel - Vacation STAY 18449v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6384</th>\n",
       "      <td>6410</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sno                                   Hotel name Free_wifi  \\\n",
       "6380  6406             Tokyo Inn - Vacation STAY 11125v       Yes   \n",
       "6381  6407             Tokyo Inn - Vacation STAY 11102v       Yes   \n",
       "6382  6408             HIZ HOTEL - Vacation STAY 18549v       Yes   \n",
       "6383  6409      Sakura Sky Hotel - Vacation STAY 18449v       Yes   \n",
       "6384  6410  Hotel Suntargas Ueno - Vacation STAY 08478v       Yes   \n",
       "\n",
       "     Family_Rooms Non_Smoking_Rooms Restaurant Bar Heating Lift  \\\n",
       "6380           No                No         No  No     Yes  Yes   \n",
       "6381           No                No         No  No     Yes  Yes   \n",
       "6382           No               Yes         No  No     Yes  Yes   \n",
       "6383           No               Yes         No  No     Yes  Yes   \n",
       "6384           No               Yes         No  No     Yes  Yes   \n",
       "\n",
       "     Breakfast_Cuisine1 Breakfast_Cuisine2 Breakfast_Cuisine3  \n",
       "6380                 No                 No                 No  \n",
       "6381                 No                 No                 No  \n",
       "6382                 No                 No                 No  \n",
       "6383                 No                 No                 No  \n",
       "6384                 No                 No                 No  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "9e1fef3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>price</th>\n",
       "      <th>Room_type</th>\n",
       "      <th>Single_bed</th>\n",
       "      <th>Double_bed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24323</th>\n",
       "      <td>24324</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11128v</td>\n",
       "      <td>8875</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24324</th>\n",
       "      <td>24325</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>7590</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24325</th>\n",
       "      <td>24326</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>7782</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24326</th>\n",
       "      <td>24327</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>27012</td>\n",
       "      <td>Studio</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24327</th>\n",
       "      <td>24328</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>7074</td>\n",
       "      <td>Studio</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sno                                   Hotel name  price Room_type  \\\n",
       "24323  24324             Tokyo Inn - Vacation STAY 11128v   8875    Studio   \n",
       "24324  24325             Tokyo Inn - Vacation STAY 11125v   7590    Studio   \n",
       "24325  24326             Tokyo Inn - Vacation STAY 11102v   7782    Studio   \n",
       "24326  24327             HIZ HOTEL - Vacation STAY 18549v  27012    Studio   \n",
       "24327  24328  Hotel Suntargas Ueno - Vacation STAY 08478v   7074    Studio   \n",
       "\n",
       "      Single_bed Double_bed  \n",
       "24323         No        Yes  \n",
       "24324         No        Yes  \n",
       "24325         No        Yes  \n",
       "24326        Yes         No  \n",
       "24327        Yes         No  "
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "5d21b268",
   "metadata": {},
   "outputs": [],
   "source": [
    "a=[]\n",
    "for i in range(1,len(df3['sno'])+1):\n",
    "    a.append(i)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "2b7957a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "24177"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "809c1f9f",
   "metadata": {},
   "outputs": [],
   "source": [
    "b=[]\n",
    "for i in range(1,len(df2['sno'])+1):\n",
    "    b.append(i)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "f6123783",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6385"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "761a5367",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2['sno']=b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "95b546ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['sno']=b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "ce0cae20",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3['sno']=a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "e1a875dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1 = df1.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "8c2713b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>cities</th>\n",
       "      <th>location</th>\n",
       "      <th>number of reviews</th>\n",
       "      <th>user ratings</th>\n",
       "      <th>star rating</th>\n",
       "      <th>review score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6380</th>\n",
       "      <td>6381</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...</td>\n",
       "      <td>6</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6381</th>\n",
       "      <td>6382</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6382</th>\n",
       "      <td>6383</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>104-0041 Tokyo-to, Shintomi 1-3-3 HIZ HOTEL, J...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6383</th>\n",
       "      <td>6384</td>\n",
       "      <td>Sakura Sky Hotel - Vacation STAY 18449v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>130-0022 Tokyo-to, Kotobashi 4-9-3 Sakura Sky ...</td>\n",
       "      <td>1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6384</th>\n",
       "      <td>6385</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>110-0015 Tokyo-to, Higashiueno 2-19-3 Hotel Su...</td>\n",
       "      <td>6</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sno                                   Hotel name cities  \\\n",
       "6380  6381             Tokyo Inn - Vacation STAY 11125v  Tokyo   \n",
       "6381  6382             Tokyo Inn - Vacation STAY 11102v  Tokyo   \n",
       "6382  6383             HIZ HOTEL - Vacation STAY 18549v  Tokyo   \n",
       "6383  6384      Sakura Sky Hotel - Vacation STAY 18449v  Tokyo   \n",
       "6384  6385  Hotel Suntargas Ueno - Vacation STAY 08478v  Tokyo   \n",
       "\n",
       "                                               location  number of reviews  \\\n",
       "6380  143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...                  6   \n",
       "6381  143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...                  0   \n",
       "6382  104-0041 Tokyo-to, Shintomi 1-3-3 HIZ HOTEL, J...                  0   \n",
       "6383  130-0022 Tokyo-to, Kotobashi 4-9-3 Sakura Sky ...                  1   \n",
       "6384  110-0015 Tokyo-to, Higashiueno 2-19-3 Hotel Su...                  6   \n",
       "\n",
       "      user ratings  star rating  review score  \n",
       "6380           9.2            0           8.0  \n",
       "6381           0.0            0           0.0  \n",
       "6382           0.0            0           0.0  \n",
       "6383          10.0            0           6.0  \n",
       "6384           9.2            0           8.2  "
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "3f7ddec5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>Free_wifi</th>\n",
       "      <th>Family_Rooms</th>\n",
       "      <th>Non_Smoking_Rooms</th>\n",
       "      <th>Restaurant</th>\n",
       "      <th>Bar</th>\n",
       "      <th>Heating</th>\n",
       "      <th>Lift</th>\n",
       "      <th>Breakfast_Cuisine1</th>\n",
       "      <th>Breakfast_Cuisine2</th>\n",
       "      <th>Breakfast_Cuisine3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6380</th>\n",
       "      <td>6381</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6381</th>\n",
       "      <td>6382</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6382</th>\n",
       "      <td>6383</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6383</th>\n",
       "      <td>6384</td>\n",
       "      <td>Sakura Sky Hotel - Vacation STAY 18449v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6384</th>\n",
       "      <td>6385</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sno                                   Hotel name Free_wifi  \\\n",
       "6380  6381             Tokyo Inn - Vacation STAY 11125v       Yes   \n",
       "6381  6382             Tokyo Inn - Vacation STAY 11102v       Yes   \n",
       "6382  6383             HIZ HOTEL - Vacation STAY 18549v       Yes   \n",
       "6383  6384      Sakura Sky Hotel - Vacation STAY 18449v       Yes   \n",
       "6384  6385  Hotel Suntargas Ueno - Vacation STAY 08478v       Yes   \n",
       "\n",
       "     Family_Rooms Non_Smoking_Rooms Restaurant Bar Heating Lift  \\\n",
       "6380           No                No         No  No     Yes  Yes   \n",
       "6381           No                No         No  No     Yes  Yes   \n",
       "6382           No               Yes         No  No     Yes  Yes   \n",
       "6383           No               Yes         No  No     Yes  Yes   \n",
       "6384           No               Yes         No  No     Yes  Yes   \n",
       "\n",
       "     Breakfast_Cuisine1 Breakfast_Cuisine2 Breakfast_Cuisine3  \n",
       "6380                 No                 No                 No  \n",
       "6381                 No                 No                 No  \n",
       "6382                 No                 No                 No  \n",
       "6383                 No                 No                 No  \n",
       "6384                 No                 No                 No  "
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "208c8f4a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>price</th>\n",
       "      <th>Room_type</th>\n",
       "      <th>Single_bed</th>\n",
       "      <th>Double_bed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24172</th>\n",
       "      <td>24173</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11128v</td>\n",
       "      <td>8875</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24173</th>\n",
       "      <td>24174</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>7590</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24174</th>\n",
       "      <td>24175</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>7782</td>\n",
       "      <td>Studio</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24175</th>\n",
       "      <td>24176</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>27012</td>\n",
       "      <td>Studio</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24176</th>\n",
       "      <td>24177</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>7074</td>\n",
       "      <td>Studio</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         sno                                   Hotel name  price Room_type  \\\n",
       "24172  24173             Tokyo Inn - Vacation STAY 11128v   8875    Studio   \n",
       "24173  24174             Tokyo Inn - Vacation STAY 11125v   7590    Studio   \n",
       "24174  24175             Tokyo Inn - Vacation STAY 11102v   7782    Studio   \n",
       "24175  24176             HIZ HOTEL - Vacation STAY 18549v  27012    Studio   \n",
       "24176  24177  Hotel Suntargas Ueno - Vacation STAY 08478v   7074    Studio   \n",
       "\n",
       "      Single_bed Double_bed  \n",
       "24172         No        Yes  \n",
       "24173         No        Yes  \n",
       "24174         No        Yes  \n",
       "24175        Yes         No  \n",
       "24176        Yes         No  "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "28f19d43",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sno</th>\n",
       "      <th>Hotel name</th>\n",
       "      <th>cities</th>\n",
       "      <th>location</th>\n",
       "      <th>number of reviews</th>\n",
       "      <th>user ratings</th>\n",
       "      <th>star rating</th>\n",
       "      <th>review score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6380</th>\n",
       "      <td>6381</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11125v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...</td>\n",
       "      <td>6</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6381</th>\n",
       "      <td>6382</td>\n",
       "      <td>Tokyo Inn - Vacation STAY 11102v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6382</th>\n",
       "      <td>6383</td>\n",
       "      <td>HIZ HOTEL - Vacation STAY 18549v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>104-0041 Tokyo-to, Shintomi 1-3-3 HIZ HOTEL, J...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6383</th>\n",
       "      <td>6384</td>\n",
       "      <td>Sakura Sky Hotel - Vacation STAY 18449v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>130-0022 Tokyo-to, Kotobashi 4-9-3 Sakura Sky ...</td>\n",
       "      <td>1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6384</th>\n",
       "      <td>6385</td>\n",
       "      <td>Hotel Suntargas Ueno - Vacation STAY 08478v</td>\n",
       "      <td>Tokyo</td>\n",
       "      <td>110-0015 Tokyo-to, Higashiueno 2-19-3 Hotel Su...</td>\n",
       "      <td>6</td>\n",
       "      <td>9.2</td>\n",
       "      <td>0</td>\n",
       "      <td>8.2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       sno                                   Hotel name cities  \\\n",
       "6380  6381             Tokyo Inn - Vacation STAY 11125v  Tokyo   \n",
       "6381  6382             Tokyo Inn - Vacation STAY 11102v  Tokyo   \n",
       "6382  6383             HIZ HOTEL - Vacation STAY 18549v  Tokyo   \n",
       "6383  6384      Sakura Sky Hotel - Vacation STAY 18449v  Tokyo   \n",
       "6384  6385  Hotel Suntargas Ueno - Vacation STAY 08478v  Tokyo   \n",
       "\n",
       "                                               location  number of reviews  \\\n",
       "6380  143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...                  6   \n",
       "6381  143-0021 Tokyo-to, Kitamagome 2-31-6 Tokyo Inn...                  0   \n",
       "6382  104-0041 Tokyo-to, Shintomi 1-3-3 HIZ HOTEL, J...                  0   \n",
       "6383  130-0022 Tokyo-to, Kotobashi 4-9-3 Sakura Sky ...                  1   \n",
       "6384  110-0015 Tokyo-to, Higashiueno 2-19-3 Hotel Su...                  6   \n",
       "\n",
       "      user ratings  star rating  review score  \n",
       "6380           9.2            0           8.0  \n",
       "6381           0.0            0           0.0  \n",
       "6382           0.0            0           0.0  \n",
       "6383          10.0            0           6.0  \n",
       "6384           9.2            0           8.2  "
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df4=pd.read_csv(\"Data1.csv\")\n",
    "df4.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9fb35a50",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
